//====================
// APP
//====================

.app {
	background: var(--white);
	box-shadow: 0 .4rem 1.2rem .4rem $shadow;
	padding-top: 1.6rem;

	@include mq(large) {
		border-radius: 10rem;
		box-shadow: 0 6.4rem var(--mercury), 0 6.4rem 1.2rem .4rem $shadow;
		margin-bottom: 6.4rem;
		padding-top: 3.2rem;
	}
}

//
// == FEATURES == //
//

.app-features {
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;
	width: 100%;
}

// == SUBDIALS == //

.subdials {
	display: flex;
	align-items: center;
	flex-flow: row nowrap;
	justify-content: space-between;
}

.one-to-ten,
.one-to-sixty {
	position: relative;
	height: 7.2rem;
	width: 7.2rem;

	@include mq(medium) {
		height: 10rem;
		width: 10rem;
	}

	@include mq(large) {
		height: 13.2rem;
		width: 13.2rem;
	}
}

.total {
	position: relative;
	height: 13.2rem;
	width: 13.2rem;

	@include mq(medium) {
		height: 18rem;
		width: 18rem;
	}

	@include mq(large) {
		height: 24.8rem;
		width: 24.8rem;
	}
}

.one-to-ten__icon,
.one-to-sixty__icon {
	position: absolute;
	left: 0;
	top: 0;
	width: 7.2rem;
	z-index: 2;
	color: var(--white);
	fill: var(--wild-sand);

	@include mq(medium) {
		width: 10rem;
	}

	@include mq(large) {
		width: 13.2rem;
	}
}

.total__icon {
	position: absolute;
	left: 0;
	top: 0;
	width: 13.2rem;
	z-index: 2;
	color: var(--white);
	fill: var(--wild-sand);

	@include mq(medium) {
		width: 18rem;
	}

	@include mq(large) {
		width: 24.8rem;
	}
}

// Adapted from Kitty Giraudel's "CSS pie timer revisited"
// https://kittygiraudel.com/2021/04/11/css-pie-timer-revisited/
.one-to-ten__pie,
.one-to-sixty__pie {
	position: relative;
	height: 7.2rem;
	width: 7.2rem;
	border: .1rem solid var(--wild-sand);
	border-radius: 50%;

	@include mq(medium) {
		height: 10rem;
		width: 10rem;
	}

	@include mq(large) {
		height: 13.2rem;
		width: 13.2rem;
	}
}

.total__pie {
	position: relative;
	height: 13.2rem;
	width: 13.2rem;
	border: .1rem solid var(--wild-sand);
	border-radius: 50%;

	@include mq(medium) {
		height: 18rem;
		width: 18rem;
	}

	@include mq(large) {
		height: 24.8rem;
		width: 24.8rem;
	}
}

.one-to-ten__pie::before,
.one-to-ten__pie::after,
.one-to-sixty__pie::before,
.one-to-sixty__pie::after,
.total__pie::before,
.total__pie::after  {
	content: "";
	// Shape as half-circles
	width: 50%;
	height: 100%;
	border-radius: 50rem 0 0 50rem;
	// Position on left side
	position: absolute;
	left: 0;
	// Spin from center right point
	transform-origin: center right;
}

// Place mask pseudo-element on top
.one-to-ten__pie::before,
.one-to-sixty__pie::before,
.total__pie::before {
	z-index: 1;
	background-color: var(--white);
}

// Spinning pseudo-element
.one-to-ten__pie::after,
.one-to-sixty__pie::after,
.total__pie::after {
	background: var(--color-primary);
}

// Animation properties for one to ten, total, and one to sixty
.one-to-ten__pie::before,
.one-to-ten__pie::after {
	animation-duration: 10s;
	animation-iteration-count: infinite;
	animation-play-state: var(--animation-play-state);
}

.total__pie::before,
.total__pie::after {
	animation-duration: var(--subdial-seconds);
	animation-play-state: var(--animation-play-state);
}

.one-to-sixty__pie::before,
.one-to-sixty__pie::after {
	animation-duration: 60s;
	animation-iteration-count: infinite;
	animation-play-state: var(--animation-play-state);
}

// Single step halfway through
.one-to-ten__pie::before,
.one-to-sixty__pie::before,
.total__pie::before {
	animation-name: mask;
	animation-timing-function: steps(1);
}

// Make rotation linear
.one-to-ten__pie::after,
.one-to-sixty__pie::after,
.total__pie::after {
	animation-name: rotate;
	animation-timing-function: linear;
}

@keyframes mask {
	50%,
	100% {
		background-color: var(--color-primary);
		transform: rotate(0.5turn);
	}
}

@keyframes rotate {
	to {
		transform: rotate(1turn);
	}
}

// == TOGGLE == //

// Adapted from Kitty Giraudel's "An accessible toggle"
// https://kittygiraudel.com/2021/04/05/an-accessible-toggle/#button-variant
.session-toggle {
	display: flex;
	justify-content: center;
	margin-top: 4.8rem;
}

.session-toggle__btn {
	position: relative;
	display: flex;
	align-items: center;
	background-color: transparent;
	border: 0;
	cursor: pointer;
	padding: 0;
}

.session-toggle__text {
	font-family: $fs-sans;
	font-size: 1.6rem;
	color: var(--silver);
	text-transform: lowercase;

	@include mq(large) {
		font-size: 2.4rem;
	}
}

.session-toggle__display {
	display: inline-flex;
	height: 2.4rem;
	width: 4.8rem;
	border-radius: 100vw;
	box-shadow: inset 0 0 0 .4rem var(--color-primary);
	margin-left: 1.2rem;
	margin-right: 1.2rem;

	@include mq(large) {
		height: 3.2rem;
		width: 6.4rem;
	}
}

.session-toggle__display::before {
	position: absolute;
	width: 2.4rem;
	height: 2.4rem;
	background: var(--color-primary);
	border-radius: 50%;
	content: "";

	@include mq(large) {
		height: 3.2rem;
		width: 3.2rem;
	}
}

.session-toggle__btn[aria-pressed="true"] .session-toggle__display::before {
	transform: translate(100%);
}

// == TIMER == //

.timer {
	position: relative;
	// Keep content width so that it's not the width of the parent (important for reset button)
	align-self: center;
	margin-top: 1.6rem;
}

.timer-display,
.timer-input {
	display: flex;
	flex-flow: row nowrap;
	justify-content: center;
	color: var(--color-primary);
	font-size: 6.8rem;
	font-weight: bold;

	@include mq(large) {
		font-size: 10rem;
	}
}

.timer-input__minutes {
	border: 0;
	color: var(--color-primary);
	margin-left: -.8rem;
	margin-right: -.8rem;
	padding: 0;
	padding-left: .8rem;
	padding-right: .8rem;
	text-align: right;
}

.timer-input:hover .timer-input__minutes {
	background: var(--wild-sand);
	border-radius: .8rem;
}

.timer-reset {
	position: absolute;
	right: -3.2rem;
	top: 30%;
	z-index: 1;
	border: 0;
	background: none;
	cursor: pointer;
}

.timer-reset__icon {
	fill: var(--color-primary);
	width: 2.4rem;
}

// == CONTROLS == //

.controls {
	position: relative;
	display: flex;
	justify-content: center;
	margin-top: 1.6rem;
}

.controls__stop {
	// Because it's originally a flex item, it will stay in the center
	// Applying a left margin pushes it out so that it's distinguishable from the play/pause button (still magic values though)
	position: absolute;
	top: 0;
	margin-left: 12rem;

	@include mq(large) {
		margin-left: 18rem;
	}
}

.controls__play,
.controls__pause,
.controls__stop {
	background: none;
	border: none;
	cursor: pointer;
}

.controls__icon-play,
.controls__icon-pause {
	fill: var(--color-primary);
	width: 7.2rem;

	@include mq(large) {
		width: 10.8rem;
	}
}

.controls__icon-stop {
	fill: var(--color-primary);
	width: 3.6rem;

	@include mq(large) {
		width: 5.4rem;
	}
}

// == SESSIONS == //

.sessions {
	display: flex;
	flex-flow: row nowrap;
	justify-content: center;
	margin-top: 3.6rem;
	margin-bottom: 4.8rem;

	@include mq(large) {
		margin-top: 4.8rem;
	}
}

.sessions__marker {
	background: var(--wild-sand);
	border-radius: 50%;
	height: 2rem;
	width: 2rem;

	@include mq(large) {
		height: 3.2rem;
		width: 3.2rem;
	}
}

.sessions__marker + .sessions__marker {
	margin-left: 1.2rem;

	@include mq(large) {
		margin-left: 1.6rem;
	}
}

.sessions__marker_completed {
	background: var(--color-primary);
}

//
// == MENU == //
//

.app-menu {
	margin-left: -1.6rem;
	margin-right: -1.6rem;

	@include mq(large) {
		margin-left: initial;
		margin-right: initial;
	}
}

// == STATS AND SETTINGS == //

.stats,
.settings {
	background: var(--scorpion);
	border-left: .4rem solid var(--gray);
	border-right: .4rem solid var(--gray);
	box-shadow: inset 0 .8rem .8rem $shadow-dark;
	color: var(--silver);
	padding: 2.4rem 1.6rem 1.2rem 1.6rem;

	@include mq(large) {
		border-left: .8rem solid var(--gray);
		border-right: .8rem solid var(--gray);
	}
}

.settings__inner {
	max-width: calc($readable-width / 2);
}

.stats__heading,
.settings__heading {
	font-size: 2.6rem;
	text-align: center;

	@include mq(large) {
		font-size: 4rem;
	}
}

.stats__sheet {
	display: flex;
	flex-flow: column nowrap;
	margin-top: 1.6rem;

	@include mq(medium) {
		flex-flow: row nowrap;
	}
}

.stats__group {
	display: flex;
	align-items: center;
	flex-flow: column nowrap;

	@include mq(medium) {
		flex: 1;
		padding-left: .4rem;
		padding-right: .4rem;
	}

	@include mq(large) {
		padding-left: 1.6rem;
		padding-right: 1.6rem;
	}
}

.stats__group + .stats__group {
	margin-top: 1.6rem;

	@include mq(medium) {
		margin-top: initial;
	}
}

.stats__figure {
	font-weight: bold;
	font-size: 2rem;

	@include mq(large) {
		font-size: 2.4rem;
	}
}

.stats__desc {
	font-weight: 700;
	letter-spacing: .05rem;
	line-height: 1.2;
	margin-top: .2rem;
	text-align: center;
	text-transform: uppercase;

	@include mq(medium) {
		font-size: 1.6rem;
	}
}

.settings__subheading-container {
	display: flex;
	align-items: center;
	margin-top: .8rem;

	@include mq(large) {
		margin-top: 1.6rem;
	}
}

.settings__subheading {
	font-size: 1.8rem;
	letter-spacing: .05rem;
	margin-right: .8rem;
	text-transform: uppercase;

	@include mq(large) {
		font-size: 2.8rem;
	}
}

.settings__hr-wave {
	flex-grow: 1;
	border: 0;
	background-image: var(--icon-wave-settings);
	background-repeat: repeat-x;
	// Wave icon has a height/width of 24
	height: 2.4rem;
}

.settings__time-item {
	display: flex;
	justify-content: space-between;
	font-weight: 700;
	margin-top: .8rem;
}

.settings__input {
	background: var(--tundora);
	border: 0;
	border-radius: .8rem;
	color: var(--silver);
	padding-left: .8rem;
	padding-right: .8rem;
	text-align: center;
}

.settings__input::placeholder {
	color: var(--silver);
	opacity: 1;
}

.settings__input:focus::placeholder {
	// Make placeholder transparent on focus
	color: transparent;
}

// Disabled state
.settings__btn-save {
	background: var(--silver);
	border: 0;
	border-radius: .8rem;
	color: var(--tundora);
	cursor: not-allowed;
	font-family: $fs-sans;
	font-weight: 700;
	letter-spacing: .05rem;
	margin-top: 1.6rem;
	padding: .8rem;
	text-transform: uppercase;
	width: 100%;

	@include mq(large) {
		margin-top: 2.4rem;
	}
}

// Ready state
.settings__btn-save_ready {
	background: var(--color-primary);
	color: var(--white);
	cursor: pointer;
}

.stats__btn-close,
.settings__btn-close {
	background: none;
	border: 0;
	color: var(--gray);
	cursor: pointer;
	font-family: $fs-sans;
	font-size: 1.2rem;
	font-weight: 700;
	letter-spacing: .05rem;
	margin-top: 1.6rem;
	text-transform: uppercase;
	width: 100%;

	@include mq(large) {
		font-size: 1.6rem;
		margin-top: 2.4rem;
	}
}

.stats__icon-close,
.settings__icon-close {
	display: inline-block;
	fill: var(--gray);
	margin-bottom: -.4rem;
	width: 1.2rem;

	@include mq(large) {
		width: 1.6rem;
	}
}

// == MENU BAR == //

.menu-bar {
	background: var(--wild-sand);
	padding: 2.4rem 1.6rem;

	@include mq(large) {
		border-radius: 0 0 10rem 10rem;
		padding-top: 3.2rem;
		padding-bottom: 3.2rem;
	}
}

.menu-bar__list {
	display: flex;
	flex-flow: row nowrap;
	justify-content: space-between;
	list-style: none;
}

.menu-bar__btn {
	background: none;
	border: 0;
	cursor: pointer;
	padding: 0;
}

.menu-bar__icon {
	fill: var(--silver);
	width: 3.6rem;

	@include mq(large) {
		width: 4.8rem;
	}
}
